{"version":3,"sources":["withRoot.js","pages/index.js","registerServiceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","purple","main","dark","secondary","green","withRoot","Component","props","react_default","a","createElement","styles","CssBaseline_default","Home","state","open","handleClose","_this","setState","handleClick","classes","this","className","root","Dialog_default","onClose","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","color","onClick","Typography_default","variant","gutterBottom","React","About","Topic","_ref","match","params","topicId","Topics","_ref2","Link","to","concat","url","Route","path","component","exact","render","BasicExample","value","handleChange","event","_this2","BrowserRouter","BottomNavigation_default","onChange","BottomNavigationAction_default","label","icon","Favorite_default","Restore_default","LocationOn_default","pages_Home","Object","assign","withStyles","textAlign","paddingTop","spacing","unit","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","pages","document","querySelector","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8621852a.chunk.js","sourcesContent":["import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Typography from '@material-ui/core/Typography';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { withStyles } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport withRoot from '../withRoot';\n\nconst styles = theme => ({\n  root: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 20,\n  },\n});\n\nclass Home extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  handleClick = () => {\n    this.setState({\n      open: true,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { open } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <Dialog open={open} onClose={this.handleClose}>\n          <DialogTitle>Super Secret Password</DialogTitle>\n          <DialogContent>\n            <DialogContentText>1-2-3-4-5</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={this.handleClose}>\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Typography variant=\"h4\" gutterBottom>\n          Material-UI\n        </Typography>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          example project\n        </Typography>\n        <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClick}>\n          Super Secret Password\n        </Button>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst About = () => (\n  <div>\n    <h2>About</h2>\n  </div>\n);\n\nconst Topic = ({ match }) => (\n  <div>\n    <h3>{match.params.topicId}</h3>\n  </div>\n);\n\nconst Topics = ({ match }) => (\n  <div>\n    <h2>Topics</h2>\n    <ul>\n      <li>\n        <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n      </li>\n      <li>\n        <Link to={`${match.url}/components`}>Components</Link>\n      </li>\n      <li>\n        <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n      </li>\n    </ul>\n\n    <Route path={`${match.path}/:topicId`} component={Topic} />\n    <Route\n      exact\n      path={match.path}\n      render={() => <h3>Please select a topic.</h3>}\n    />\n  </div>\n);\n\nclass BasicExample extends React.Component {\n  state = {\n    value: 'recents',\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n\n    return (\n      <Router>\n        <div>\n          <BottomNavigation value={value} onChange={this.handleChange}>\n            <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} component={Link} to=\"/about\" />\n            <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} component={Link} to=\"/\" />\n            <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} component={Link} to=\"/topics\" />\n          </BottomNavigation>\n\n          <Route exact path=\"/\" render={(props) => <Home {...props} classes={classes} />} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/topics\" component={Topics} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withRoot(withStyles(styles)(BasicExample));\n","/* eslint-disable */\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Index from './pages/index';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<Index />, document.querySelector('#root'));\nregisterServiceWorker();\n"],"sourceRoot":""}